# -*- coding: utf-8 -*-
"""[1260번] DFS와 BFS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JZRWYmNIJB8cmg6aXNM__4de0nIVL1aE
"""

import sys
r = sys.stdin.readline
N,M,V = map(int,r().split())

edge = [[] for _ in range(N+1)]
for _ in range(M):               
	A,B = map(int,r().split())
	edge[A].append(B)
	edge[B].append(A)

for e in edge:              
	e.sort(reverse=True)

def DFS():
	dfs = []
	stack = [V]
	visit = [False for _ in range(N+1)]
	while stack:                    
		node = stack.pop()
		if visit[node]:
			pass
		else:
			visit[node] = True
			dfs.append(node)
			stack += edge[node]
	return dfs

def BFS():
	bfs = [] 
	que = [V]
	visit = [False for _ in range(N+1)]
	visit[V] = True
	while que:
		node = que.pop()
		bfs.append(node)
		for i in reversed(edge[node]): # [2, 3, 4]
			if visit[i]:
				continue
			visit[i] = True
			que = [i] + que
	return bfs
	
print(' '.join(map(str,DFS())))
print(' '.join(map(str,BFS())))